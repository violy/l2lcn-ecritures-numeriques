{"version":3,"file":"component---src-pages-index-js-dbcd84016cf6e7b6a7c2.js","mappings":"+KAYA,SAASA,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gBAAC,IAAD,CACEM,eAAgB,CACdR,KAAAA,GAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASN,IAEXS,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,wECjDA,UAhCkB,SAAC,GAAD,IAAEiB,EAAF,EAAEA,KAAF,OAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAM,SACX,qCACA,sBAAIe,UAAW,cACZD,EAAKE,MAAMC,MAAMC,KAAI,SAACC,EAAOC,GAAR,OACpB,sBAAIA,IAAKA,EAAKL,UAAS,SAAUI,EAAOE,YAAYC,MAAM,GAAI,EAAE,OAAO,UAAW,4BAAOH,EAAOE,YAAYC,OAA5G,IAA0H,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAOE,YAAYI,MAAON,EAAOE,YAAYrB","sources":["webpack://l2lcn-ecritures-numeriques/./src/components/seo.js","webpack://l2lcn-ecritures-numeriques/./src/pages/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../components/index.css\"\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <h1>Accueil</h1>\n    <ul className={\"index-tree\"}>\n      {data.pages.nodes.map((mdPage,key)=>\n        <li key={key} className={`item-${mdPage.frontmatter.index%1===0?'root':'child'}`}><code>{mdPage.frontmatter.index}</code> <Link to={mdPage.frontmatter.slug}>{mdPage.frontmatter.title}</Link></li>\n      )}\n    </ul>\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n  query{\n  pages:allMarkdownRemark(\n    sort: {fields: frontmatter___index}\n    filter: {frontmatter: {index: {gte: 0}}}\n  ) {\n    nodes {\n      frontmatter {\n        title\n        slug\n        next\n        keywords\n        index\n        date\n      }\n    }\n  }\n  }\n`\n\nexport default IndexPage\n"],"names":["Seo","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","data","className","pages","nodes","map","mdPage","key","frontmatter","index","Link","to","slug"],"sourceRoot":""}